name: SEO Integrity
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-seo:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      # Use the exact pnpm version from package.json's "packageManager"
      - name: Enable corepack & activate pnpm
        run: |
          corepack enable
          if node -e "process.exit(!require('./package.json').packageManager)"; then
            V=$(node -p "require('./package.json').packageManager.split('@')[1]")
            echo "Activating pnpm@$V via corepack"
            corepack prepare pnpm@$V --activate
          fi
          pnpm --version

      - name: Install dependencies (frozen, workspace root)
        run: |
          if [ -f pnpm-lock.yaml ]; then
            pnpm install --frozen-lockfile --prefer-offline
          else
            echo "WARN: pnpm-lock.yaml missing, falling back (non-deterministic)"
            pnpm install --no-frozen-lockfile --prefer-offline
          fi

      # If you're on pnpm v10, approve postinstall scripts explicitly
      - name: Approve build scripts (pnpm v10)
        run: pnpm approve-builds @prisma/client @prisma/engines @sentry/cli core-js esbuild prisma unrs-resolver

      - name: Rebuild (run approved postinstalls)
        run: pnpm rebuild -r

      - name: Run SEO checks
        run: |
          echo "Running basic SEO checks..."
          echo "Checking if build works..."
          pnpm --filter ./apps/web build
          echo "SEO checks completed successfully"
